git log => shows the log of the changes
git diff commit1 commit2 => shows the difference between commits

Do one commit per logical changes

git log --stat

clone a repo to your directory
git clone https://github.com/udacity/asteroids.git

git config --global color.ui auto

gt checkout to go to a specific commit

git checkout <commit id>Now that you have your workspace set up, what do you want to try using Git for?

git init creates an empty repository

git add <filename> => adds the file to the staging aread

git reset => removes the added file from staging area

git commit 
or 
git commit -m "commit message"

git diff without parameters show the diff between working directory version and the file added to the staging area

git diff --staged => shows the diff between staged area and the comitted

git reset --hard 

git branch -> shows the available branches

git branch <branch name> -> creates a new branch with that name

git checkout <branch name> -> then you chcekout the existing branch

	
git checkout <remote branch name> -> checks out the remote branch that someone else created

git merge master coins => merges master branch with coin branch

git show <commit id> => shows the changes done in a commit compared to its parent

add the remote repository which is created on github
git remote add origin git@github.com:....

git remote

git remote -v

origin is remote and master is the main branch on the computer
git push origin master

git pull origin master

3666
4666


